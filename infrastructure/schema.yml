CREATE TABLE users (
  username VARCHAR(30) NOT NULL,
  password VARCHAR(300) NOT NULL,
  role VARCHAR(20) NOT NULL,
  create_ts TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP(6),
  update_ts TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  PRIMARY KEY (username)
);

CREATE TABLE ledger (
  ledger_id INT NOT NULL AUTO_INCREMENT,
  gold DOUBLE NOT NULL,
  amount DOUBLE NOT NULL,
  username VARCHAR(30) NOT NULL,
  create_ts TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP(6),
  update_ts TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  PRIMARY KEY (ledger_id)
  FOREIGN KEY (username) REFERENCES users(username)
);

CREATE TABLE transactions (
  transaction_id VARCHAR(50) NOT NULL,
  username VARCHAR(30) NOT NULL,
  gold DOUBLE NOT NULL,
  amount DOUBLE NOT NULL,
  mode VARCHAR(30) NOT NULL,
  date TIMESTAMP NOT NULL,
  status VARCHAR(30) NOT NULL,
  PRIMARY KEY (transaction_id),
  create_ts TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP(6),
  update_ts TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  FOREIGN KEY (username) REFERENCES users(username)
);

CREATE TABLE spotPrice (
date TIMESTAMP NOT NULL,
  weight_unit VARCHAR(5) NOT NULL,
  ask DOUBLE NOT NULL,
  mid DOUBLE NOT NULL,
  bid DOUBLE NOT NULL,
  value DOUBLE NOT NULL,
  performance DOUBLE NOT NULL,
  metal VARCHAR(10) NOT NULL,
  currency VARCHAR(5) NOT NULL,
  create_ts TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP(6),
  update_ts TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  PRIMARY KEY (date)
);

CREATE TABLE lastHistoricalSpotPrice (
  date TIMESTAMP NOT NULL,
  weight_unit VARCHAR(5) NOT NULL,
  close DOUBLE NOT NULL,
  high DOUBLE NOT NULL,
  low DOUBLE NOT NULL,
  open DOUBLE NOT NULL,
  metal VARCHAR(10) NOT NULL,
  currency VARCHAR(5) NOT NULL,
  create_ts TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP(6),
  update_ts TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  PRIMARY KEY (date)
);